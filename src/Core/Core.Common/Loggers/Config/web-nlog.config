<?xml version="1.0" encoding="utf-8" ?>
<!-- XSD manual extracted from package NLog.Schema: https://www.nuget.org/packages/NLog.Schema-->
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
	  internalLogFile="${processdir}\nlog.internal.log"
      internalLogLevel="Off" >

	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
		<add assembly="Nlog.RabbitMQ.Target" />
	</extensions>
	
	<variable name="log-exception-uid" value="${when:when=length('${event-context:item=log-exception-uid}')>0:Inner=log-exception-uid\:${event-context:item=log-exception-uid}|}"/>
	<variable name="session-id" value="${when:when=length('${event-context:item=session-id}')>0:Inner=session-id\:${event-context:item=session-id}|}"/>
	<variable name="request-url" value="${when:when=length('${event-context:item=session-id}')>0:Inner=request-url\:${aspnet-request-url}|}"/>
	<variable name="request-body" value="${when:when=length('${event-context:item=session-id}')>0:Inner=${newline}request-body\: ${aspnet-request-posted-body}|}"/>
	<variable name="request-headers" value="request-headers: ${aspnet-request-headers}${newline}"/>
	<variable name="request-ip" value="${when:when=length('${aspnet-request-ip}')>0:Inner=${aspnet-request-ip}|}"/>
	<variable name="instance-name" value=""/>

	<variable name="logRabbitMqHost" value="sbdp-center-i52.bank.lan" />
	<variable name="logRabbitMqUsert" value="hotline" />
	<variable name="logRabbitMqPassword" value="change" />
	<variable name="logRabbitMqVhost" value="logs" />
	<variable name="logRabbitMqExchange" value="logs" />
	<variable name="logRabbitMqPort" value="5672" />

	<!-- the targets to write to -->
	<targets async="true">
		<!-- write logs to file -->
		<target name="console"
            xsi:type="ColoredConsole"
			layout="${var:instance-name}${date}|${request-ip}${level:uppercase=true}|${log-exception-uid}${session-id}log-message: ${message}|${request-url}${exception:tostring}${logger}|${request-body}${event-context:item=extended-object}" />

		<target name="debug"
            xsi:type="Debugger"
			layout="${var:instance-name}${date}|${request-ip}${level:uppercase=true}|${log-exception-uid}${session-id}log-message: ${message}|${request-url}${exception:tostring}${logger}|${request-body}${event-context:item=extended-object}" />
		
		<target name="smtp"
            xsi:type="Mail"
            smtpServer="smtp.bank.lan"
            smtpPort="25"
            enableSsl="false"
            from="m.lazorenko@bankvostok.com.ua"
            to="m.lazorenko@bankvostok.com.ua"
            subject="[${var:instance-name}${environment:HOTLINE.ENVIRONMENT}][${aspnet-MVC-Controller}][${aspnet-MVC-Action}]"
            body="date: ${longdate}${newline}level: ${level:uppercase=true}${newline}inctance: ${var:instance-name}${newline}method: ${aspnet-request-method}${newline}request-url: ${aspnet-request-url}${newline}request-ip: ${aspnet-request-ip}${newline}machinename: ${machinename}${newline}appdomain: ${appdomain}${newline}logger: ${logger}${newline}logExceptionUid: ${event-context:item=log-exception-uid}${newline}sessionId: ${event-context:item=session-id}${newline}message: ${message}${newline}exception: ${event-context:item=exception-details}${newline}extend: ${request-headers}${newline}request-body: ${aspnet-request-posted-body}${event-context:item=extended-object}" />

		<target 
          xsi:type="RabbitMQ"
          name="rabbit"
          username="${logRabbitMqUsert}"
          password="${logRabbitMqPassword}"
          hostname="${logRabbitMqHost}"
          exchange="${logRabbitMqExchange}"
          port="${logRabbitMqPort}"
          vhost="${logRabbitMqVhost}"
          deliveryMode="Persistent"
          useJSON ="true">
			<field key="levelString" name="levelString" layout="${level}"/>
			<field key="machineName" name="machineName" layout="${machinename}"/>
			<field key="appdomain" name="appdomain" layout="${appdomain}"/>
			<field key="assemblyVersion" name="assemblyVersion" layout="${assembly-version}"/>
			<field key="project" name="project" layout="Hotline"/>
			<field key="environment" name="environment" layout="Test"/>
		</target>

		<target xsi:type="Database"
				name="database"				
				dbProvider="System.Data.SqlClient"
				commandType="StoredProcedure"
				commandText="[log].[proc_AddNLog]">
			<parameter name="@loggedDate" layout="${longdate}" />
			<parameter name="@level" layout="${level:uppercase=true}" />
			<parameter name="@instanceName" layout="${var:instance-name}" />
			<parameter name="@requestUrl" layout="${aspnet-request-method}|${aspnet-request-url}" />
			<parameter name="@requestIp" layout="${aspnet-request-ip}" />
			<parameter name="@machineName" layout="${machinename}" />
			<parameter name="@appdomain" layout="${appdomain}"/>			
			<parameter name="@logExceptionUid" layout="${event-context:item=log-exception-uid}" />
			<parameter name="@sessionId" layout="${event-context:item=session-id}" />
			<parameter name="@message" layout="${message}" />
			<parameter name="@exception" layout="${event-context:item=exception-details}" />
			<parameter name="@extend" layout="request-header:${request-headers}${newline}extend:${event-context:item=extended-object}${newline}request-body: ${aspnet-request-posted-body}" />
			<parameter name="@logger" layout="${logger}" />
		</target>
	</targets>
	
	<!-- rules to map from logger name to target -->
	<rules>
		<!--  Level         Example
          Fatal         Highest level: important stuff down
          Error         For example application crashes / exceptions.
          Warn          Incorrect behavior but the application can continue
          Info          Normal behavior like mail sent, user updated profile etc.
          Debug         Executed queries, user authenticated, session expired
          Trace         Begin method X, end method X etc  -->

		<logger name="*" minlevel="Trace" writeTo="console" />
		<logger name="*" minlevel="Trace" writeTo="debug" />
		<!--<logger name="*" minlevel="Trace" writeTo="rabbit" />-->
		<logger name="*" minlevel="Trace" writeTo="database" />
		<!--<logger name="*" minlevel="Error" writeTo="smtp" />-->
	</rules>
</nlog>